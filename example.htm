<!DOCTYPE HTML>
<html>
	
	<head>
		
		<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
		<script src="http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
		<script src="jquery.sonic-gauge.js"></script>
		
		<script>
		$(function (){
			
			// Default gauge
			
			var DefaultGauge = $('#default').SonicGauge ();
			
			// Create speedometer gauge
			
			var Speedometer = $('#speedometer').SonicGauge ({
				label	: 'Speed (MPH)',
				start	: {angle: -225, num: 0},
				end		: {angle: 45, num: 180},
				markers	: [
					{
						gap: 20,
						line: {"width": 20, "stroke": "none", "fill": "#eeeeee"},
						text: {"space": 22, "text-anchor": "middle", "fill": "#333333", "font-size": 18}
					},{
						gap: 10, 
						line: {"width": 12, "stroke": "none", "fill": "#aaaaaa"},
						text: {"space": 18, "text-anchor": "middle", "fill": "#333333", "font-size": 12}
					},{
						gap: 5, 
						line: {"width": 8, "stroke": "none", "fill": "#999999"}
					}
				],
				animation_speed : 200
			});
			
			// Create ammeter gauge
			
			var Ammeter = $('#ammeter').SonicGauge ({
				label	: 'Current (A)',
				margin	: 50,
				start	: {angle: -225, num: 0},
				end		: {angle: 45, num: 1},
				digital	: {
					"width"				: "25%",
					"font-size"			: 19,
					"color"				: '#fff',
					"text-align"		: "center",
					"border"			: "2px solid #590303",
					"border-radius"		: 25,
					"padding"			: 5,
					"background-color"	: "#a83209"
				},
				digital_toFixed	: 5,
				markers	: [
					{
						gap: 0.1,
						toFixed: 2,
						line: {"width": 20, "stroke": "none", "fill": "#eeeeee"},
						text: {"space": 30, "text-anchor": "middle", "fill": "#333333", "font-size": 18}
					},{
						gap: 0.05,
						toFixed: 3,
						line: {"width": 10, "stroke": "none", "fill": "#aaaaaa"},
						text: {"space": 20, "text-anchor": "middle", "fill": "#333333", "font-size": 10},
					},{
						gap: 0.025,
						line: {"width": 3, "stroke": "none", "fill": "#999999"}
					}
				],
				style	: {
					"outline"	: {"fill": "r#f46a3a-#890b0b", "stroke": "#590303", "stroke-width": 4},
					"center"	: {"fill": "#ae1e1e", "diameter": 8, "stroke": "#590303", "stroke-width": 1},
					"needle"	: {"fill": "#fbdbdb"},
					"label"		: {"font-size": 14}
				}
			});
			
			// Create altimeter gauge
			
			var Altimeter = $('#altimeter').SonicGauge ({
				label	: {
					"value"		: 'ALT (FT)',
					"margin_y"	: 80
				},
				start	: {angle: -90, num: 0},
				end		: {angle: 270, num: 1000},
				animation_speed : 200,
				default_num		: 18000,
				digital	: {
					"width"				: 80,
					"font-size"			: 16,
					"color"				: '#fff',
					"border"			: "1px solid #eee",
					"border-radius"		: 3,
					"padding"			: 2,
					"background-color"	: "#222",
					"margin-top"		: -40
				},
				markers	: [
					{
						gap		: 100,
						value	: {divide: 100},
						line	: {"width": 20, "height": 6, "stroke": "none", "fill": "#eeeeee"},
						text	: {"space": -37, "text-anchor": "middle", "fill": "#fff", "font-size": 26}
					},{
						gap		: 20,
						line	: {"width": 10, "stroke": "none", "fill": "#aaaaaa"},
					}
				],
				style	: {
					"outline"	: {"fill": "#000", "stroke": "#555", "stroke-width": 4},
					"center"	: {"fill": "#222", "diameter": 8, "stroke": "#444", "stroke-width": 1},
					"needle"	: {"fill": "#fff"},
				},
				needles : [
					{
						// 1 rotation every 1,000 ft
					},{
						value: {divide: 10}, // 1 rotation every 10,000 ft
						style: {width: 110, height: 2}
					},{
						value: {divide: 100}, // 1 rotation every 100,000 ft
						style: {width: 75, height: 4}
					}
				]
			});
			
			// Create clock
			
			var Clock = $('#clock').SonicGauge ({
				label	: "Clock",
				start	: {angle: -90, num: 0},
				end		: {angle: 270, num: 60},
				animation_speed : 1000,
				default_num		: getTimestamp (),
				digital	: false,
				markers	: [
					{
						gap		: 5,
						value	: {divide: 5},
						line	: {"width": 14, "height": 5, "stroke": "none", "fill": "#cff0ab"},
						text	: {"space": -30, "text-anchor": "middle", "fill": "#cff0ab", "font-size": 22}
					},{
						gap		: 1,
						line	: {"width": 10, "stroke": "none", "fill": "#fff"},
					}
				],
				style	: {
					"outline"	: {"fill": "#333", "stroke": "#ccc", "stroke-width": 4},
					"center"	: {"fill": "#cff0ab", "diameter": 10}
				},
				needles	: [
					{
						// Second hand
						style	: {"fill": "#cff0ab", "width": 140, "height": 1}
					},{
						// Minute hand
						value	: {divide: 60}, // 1 rotation per minute
						style	: {"fill": "#0054ff", "width": 128, "height": 3}
					},{
						// Hour hand
						value	: {divide: 720}, // 1 rotation every 12 hours
						style	: {"fill": "#cc0000", "width": 90, "height": 4}
					}
				]
			});
			
				// Create thermometer gauge
			
			var Thermometer = $('#thermometer').SonicGauge ({
				label	: 'Temp. (\u00B0C)',
				start	: {angle: -225, num: -40},
				end		: {angle: 45, num: 60},
				digital	: {
					"width"				: "16%",
					"font-size"			: 19,
					"color"				: '#333',
					"text-align"		: "center",
					"border-radius"		: 25,
					"padding"			: 5,
					"background-color"	: "#e6f0f8",
					"margin-top"		: 80
				},
				digital_toFixed	: 1,
				animation_speed	: 500,
				markers	: [
					{
						gap: 20,
						line: {"width": 20, "stroke": "none", "fill": "#eeeeee"},
						text: {"space": 22, "text-anchor": "middle", "fill": "#333333", "font-size": 18}
					},{
						gap: 10, 
						line: {"width": 12, "stroke": "none", "fill": "#aaaaaa"},
						text: {"space": 18, "text-anchor": "middle", "fill": "#333333", "font-size": 14}
					},{
						gap: 5, 
						line: {"width": 8, "stroke": "none", "fill": "#999999"}
					}
				],
				needles : [{ style: { height: 2} } ],
				sectors : [
					{
						start: -40,
						end: -25,
						style: {fill: "rgba(0,0,255,.5)", stroke: "blue", "stroke-width": 0}
					},{
						start: -30,
						end: -20,
						style: {fill: "rgba(90,200,220,.5)", stroke: "cyan", "stroke-width": 0}
					},{
						start: 10,
						end: 20,
						radius: 125,
						style: {fill: "rgba(50,220,50,.5)", stroke: "cyan", "stroke-width": 0}
					},{
						start: 30,
						end: 50,
						style: {fill: "rgba(250,230,70,.5)", stroke: "yellow", "stroke-width": 0}
					},{
						start: 40,
						end: 60,
						style: {fill: "rgba(255,0,0,.5)", stroke: "red", "stroke-width": 0}
					}
				],
				style	: {
					"outline"	: {"fill": "#dedede", "stroke": "#333", "stroke-width": 2},
					"center"	: {"fill": "#ae1e1e", "diameter": 8, "stroke": "#590303", "stroke-width": 1},
					"needle"	: {"fill": "#000"},
					"label"		: {"fill": "#000", "font-size": 14}
				}
			});
			
			// Cycle gauge up and down
			
			function cycleGauge (el, delay, increment, min, max, current, target) {
				
				if (typeof current == "undefined")
				{
					current = min;
				}
				
				if (typeof target == "undefined")
				{
					target = max;
				}
				
				if (current < target)
				{
					current += increment;
				}
				else if (current > target)
				{
					current -= increment;
				}
				else
				{
					cycleGauge (el, delay, increment, min, max, current, target == min? max : min);
					return;
				}
				
				el.SonicGauge ('val', current);
				setTimeout (function () {
					cycleGauge (el, delay, increment, min, max, current, target);
				}, delay);
				
			}
		
			cycleGauge (Speedometer, 200, 5, 0, 160);
			cycleGauge (Altimeter, 200, 10, 0, 35000, 18000);
			cycleGauge (Thermometer, 500, .5, -40, 60, 0);
			
			// Randomly set ammeter value
			
			setInterval (function () {
				Ammeter.SonicGauge ('val', Math.random ())
			}, 1000)
			
			// Update clock every second
			
			function getTimestamp ()
			{
				var d	= new Date ();
				return Math.round (d.getTime () / 1000) - (d.getTimezoneOffset () * 60);
			}
			
			setInterval (function () {
				Clock.SonicGauge ('val', getTimestamp ());
			}, 1000)
			
			// Bind event whenever the clock value is updated
			
			Clock.on ('update', function (e, data) {
				//console.log ('clock is updated: ' + data);
			});
			
		});
		</script>
		
		<style media="screen" type="text/css">
			.gauge {
				float: left;
				margin: 10px 30px;
			}
		</style>
		
	</head>
	
	<body>
		
		<div id='default' class="gauge"></div>
		<div id='speedometer' class="gauge"></div>
		<div id='ammeter' class="gauge"></div>
		<br clear="both">
		<div id='altimeter' class="gauge"></div>
		<div id='clock' class="gauge"></div>
		<div id='thermometer' class="gauge"></div>
		
	</body>
	
</html>
